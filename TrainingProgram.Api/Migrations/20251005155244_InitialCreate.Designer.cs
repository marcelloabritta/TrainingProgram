// <auto-generated />
using System;
using TrainingProgram.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace TrainingProgram.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251005155244_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TrainingProgram.Api.Models.Drill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainingSessionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrainingSessionId");

                    b.ToTable("Drills");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opponent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.Macrocycle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Season")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalSessions")
                        .HasColumnType("int");

                    b.Property<int>("TotalVolumeMinutes")
                        .HasColumnType("int");

                    b.Property<int>("TotalWeeks")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Macrocycles");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.Mesocycle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MacrocycleId")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MacrocycleId");

                    b.ToTable("Mesocycles");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.Sport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sports");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.StaffUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePhoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("TeamId");

                    b.ToTable("StaffUsers");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SportId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.TrainingSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainingTypeId")
                        .HasColumnType("int");

                    b.Property<int>("WeeklyMicrocycleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrainingTypeId");

                    b.HasIndex("WeeklyMicrocycleId");

                    b.ToTable("TrainingSessions");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.TrainingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TrainingTypes");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.TrainingVolume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MacrocycleId")
                        .HasColumnType("int");

                    b.Property<int>("PlannedMinutes")
                        .HasColumnType("int");

                    b.Property<int>("RealizedMinutes")
                        .HasColumnType("int");

                    b.Property<int>("TrainingTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MacrocycleId");

                    b.HasIndex("TrainingTypeId");

                    b.ToTable("TrainingVolumes");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.UserSport", b =>
                {
                    b.Property<int>("StaffUserId")
                        .HasColumnType("int");

                    b.Property<int>("SportId")
                        .HasColumnType("int");

                    b.HasKey("StaffUserId", "SportId");

                    b.HasIndex("SportId");

                    b.ToTable("UserSports");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.WeeklyMicrocycle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MesocycleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalMinutes")
                        .HasColumnType("int");

                    b.Property<int>("WorkDays")
                        .HasColumnType("int");

                    b.Property<int>("WorkSessions")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MesocycleId");

                    b.ToTable("WeeklyMicrocycles");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.Drill", b =>
                {
                    b.HasOne("TrainingProgram.Api.Models.TrainingSession", "TrainingSession")
                        .WithMany("Drills")
                        .HasForeignKey("TrainingSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrainingSession");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.Game", b =>
                {
                    b.HasOne("TrainingProgram.Api.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.Mesocycle", b =>
                {
                    b.HasOne("TrainingProgram.Api.Models.Macrocycle", "Macrocycle")
                        .WithMany("Mesocycles")
                        .HasForeignKey("MacrocycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Macrocycle");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.StaffUser", b =>
                {
                    b.HasOne("TrainingProgram.Api.Models.Role", "Role")
                        .WithMany("StaffUsers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrainingProgram.Api.Models.Team", "Team")
                        .WithMany("Coaches")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.Team", b =>
                {
                    b.HasOne("TrainingProgram.Api.Models.Sport", "Sport")
                        .WithMany()
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.TrainingSession", b =>
                {
                    b.HasOne("TrainingProgram.Api.Models.TrainingType", "TrainingType")
                        .WithMany("TrainingSessions")
                        .HasForeignKey("TrainingTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrainingProgram.Api.Models.WeeklyMicrocycle", "WeeklyMicrocycle")
                        .WithMany("Sessions")
                        .HasForeignKey("WeeklyMicrocycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrainingType");

                    b.Navigation("WeeklyMicrocycle");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.TrainingVolume", b =>
                {
                    b.HasOne("TrainingProgram.Api.Models.Macrocycle", "Macrocycle")
                        .WithMany("TrainingVolumes")
                        .HasForeignKey("MacrocycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrainingProgram.Api.Models.TrainingType", "TrainingType")
                        .WithMany()
                        .HasForeignKey("TrainingTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Macrocycle");

                    b.Navigation("TrainingType");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.UserSport", b =>
                {
                    b.HasOne("TrainingProgram.Api.Models.Sport", "Sport")
                        .WithMany("UserSports")
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("TrainingProgram.Api.Models.StaffUser", "StaffUser")
                        .WithMany("UserSports")
                        .HasForeignKey("StaffUserId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Sport");

                    b.Navigation("StaffUser");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.WeeklyMicrocycle", b =>
                {
                    b.HasOne("TrainingProgram.Api.Models.Mesocycle", "Mesocycle")
                        .WithMany("Weeks")
                        .HasForeignKey("MesocycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mesocycle");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.Macrocycle", b =>
                {
                    b.Navigation("Mesocycles");

                    b.Navigation("TrainingVolumes");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.Mesocycle", b =>
                {
                    b.Navigation("Weeks");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.Role", b =>
                {
                    b.Navigation("StaffUsers");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.Sport", b =>
                {
                    b.Navigation("UserSports");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.StaffUser", b =>
                {
                    b.Navigation("UserSports");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.Team", b =>
                {
                    b.Navigation("Coaches");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.TrainingSession", b =>
                {
                    b.Navigation("Drills");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.TrainingType", b =>
                {
                    b.Navigation("TrainingSessions");
                });

            modelBuilder.Entity("TrainingProgram.Api.Models.WeeklyMicrocycle", b =>
                {
                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
